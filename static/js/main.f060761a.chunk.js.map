{"version":3,"sources":["App.js","shared/components/FormElements/Button.js","shared/components/UIElements/Card.js","users/components/UserItem.js","users/components/UsersList.js","shared/components/UIElements/Backdrop.js","shared/components/UIElements/Modal.js","shared/components/UIElements/ErrorModal.js","shared/components/UIElements/LoadingSpinner.js","users/pages/Users.js","centers/pages/Centers.js","centers/pages/AddCenter.js","shared/components/Navigation/MainHeader.js","shared/context/auth-context.js","shared/components/Navigation/DropdownLogout.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","users/pages/Auth.js","shared/hooks/http-hook.js","users/pages/UpdateUser.js","users/pages/UserProfile.js","centers/pages/UpdateCenter.js","index.js"],"names":["logoutTimer","Button","props","href","className","size","inverse","danger","children","to","exact","type","onClick","disabled","Card","style","UserItem","name","email","id","UsersList","items","length","map","user","userId","Backdrop","ReactDOM","createPortal","document","getElementById","ModalOverlay","content","headerClass","header","onSubmit","event","preventDefault","contentClass","footerClass","footer","Modal","Fragment","show","onCancel","CSSTransition","in","mountOnEnter","unmountOnExit","timeout","classNames","ErrorModal","onClear","error","LoadingSpinner","asOverlay","Users","useState","isLoading","setIsLoading","setError","loadedUsers","setLoadedUsers","useEffect","sendRequest","a","fetch","response","json","responseData","ok","Error","message","users","Centers","AddCenter","MainHeader","AuthContext","createContext","isLoggedIn","token","login","logout","useStyles","makeStyles","logoutButton","fontSize","background","border","letterSpacing","DropdownLogout","classes","React","anchorEl","setAnchorEl","auth","useContext","handleClose","currentTarget","Menu","keepMounted","open","Boolean","onClose","MenuItem","component","Link","authButton","NavLinks","SideDrawer","MainNavigation","drawerIsOpen","setDrawerIsOpen","closeDrawerHandler","VALIDATOR_TYPE_REQUIRE","VALIDATOR_TYPE_MINLENGTH","VALIDATOR_TYPE_MAXLENGTH","VALIDATOR_TYPE_EMAIL","VALIDATOR_TYPE_PHONE_NO","VALIDATOR_TYPE_PASSWORD","VALIDATOR_REQUIRE","VALIDATOR_PASSWORD","val","validate","value","validators","isValid","validator","trim","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","onInput","changeHandler","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","Auth","isLoginMode","setIsLoginMode","activeHttpRequests","useRef","useCallback","url","method","body","headers","httpAbortCtrl","AbortController","current","push","signal","filter","reqCtrl","forEach","abortCtrl","abort","clearError","useHttpClient","history","useHistory","initialInputs","initialFormValidity","formState","inputData","formValidity","useForm","password","inputHandler","setFormData","authSubmitHandler","JSON","stringify","address","contact_no","console","log","confirm_password","undefined","prevMode","UpdateUser","UserProfile","UpdateCenter","App","routes","setToken","tokenExpirationDate","setTokenExpirationDate","setUserId","uid","expirationDate","Date","getTime","localStorage","setItem","expiration","toISOString","removeItem","remainingTime","setTimeout","clearTimeout","storedData","parse","getItem","path","Provider","render"],"mappings":"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","file":"static/js/main.f060761a.chunk.js","sourcesContent":["import React, { useState, useCallback, useEffect }  from 'react';\r\nimport {BrowserRouter as Router, Route, Redirect, Switch} from 'react-router-dom';\r\nimport './App.css';\r\nimport Users from './users/pages/Users';\r\nimport Centers from './centers/pages/Centers';\r\nimport AddCenter from './centers/pages/AddCenter';\r\nimport MainNavigation from './shared/components/Navigation/MainNavigation';\r\nimport Auth from './users/pages/Auth';\r\nimport { AuthContext } from './shared/context/auth-context';\r\nimport UpdateUser from './users/pages/UpdateUser';\r\nimport UserProfile from './users/pages/UserProfile';\r\nimport UpdateCenter from './centers/pages/UpdateCenter'\r\n\r\nlet logoutTimer;\r\n\r\nconst App = () => {\r\n  const [token, setToken] = useState(false);\r\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\r\n  const [userId, setUserId] = useState(false);\r\n\r\n\r\n  const login = useCallback((uid, token, expirationDate) => {\r\n    setToken(token);\r\n    setUserId(uid);\r\n    const tokenExpirationDate =\r\n      expirationDate || new Date(new Date().getTime() + 1000 * 60 * 60);\r\n    setTokenExpirationDate(tokenExpirationDate);\r\n    localStorage.setItem(\r\n      'userData',\r\n      JSON.stringify({\r\n        userId: uid,\r\n        token: token,\r\n        expiration: tokenExpirationDate.toISOString()\r\n      })\r\n    );\r\n  }, []);\r\n\r\n\r\n  const logout = useCallback(() => {\r\n    setToken(null);\r\n    setTokenExpirationDate(null);\r\n    setUserId(null);\r\n    localStorage.removeItem('userData');\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (token && tokenExpirationDate) {\r\n      const remainingTime = tokenExpirationDate.getTime() - new Date().getTime();\r\n      logoutTimer = setTimeout(logout, remainingTime);\r\n    } else {\r\n      clearTimeout(logoutTimer);\r\n    }\r\n  }, [token, logout, tokenExpirationDate]);\r\n\r\n  useEffect(() => {\r\n    const storedData = JSON.parse(localStorage.getItem('userData'));\r\n    if (\r\n      storedData &&\r\n      storedData.token &&\r\n      new Date(storedData.expiration) > new Date()\r\n    ) {\r\n      login(storedData.userId, storedData.token, new Date(storedData.expiration));\r\n    }\r\n  }, [login]);\r\n\r\n\r\n  let routes;\r\n\r\n  if (token) {\r\n    routes = (\r\n    <Switch>\r\n    <Route path =\"/\" exact>\r\n      <Centers/>\r\n      </Route>\r\n      <Route path =\"/addcenter\" exact>\r\n      <AddCenter/>\r\n      </Route>\r\n      <Route path =\"/updatecenter\" exact>\r\n      <UpdateCenter/>\r\n      </Route>\r\n      <Route path =\"/users\" exact>\r\n      <Users/>\r\n      </Route>\r\n      <Route path =\"/updateuser\" exact>\r\n      <UpdateUser/>\r\n      </Route>\r\n      <Route path =\"/userprofile\" exact>\r\n      <UserProfile/>\r\n      </Route>\r\n      <Route path=\"/users/:userId\">\r\n      <UpdateUser/>\r\n      </Route>\r\n      <Redirect to=\"/\"/>\r\n      </Switch>\r\n\r\n  );\r\n}else {\r\n  routes = (\r\n    <Switch>\r\n      <Route path =\"/\" exact>\r\n      <Centers/>\r\n      </Route>\r\n      <Route path=\"/auth\">\r\n        <Auth />\r\n      </Route>\r\n      <Redirect to=\"/auth\" />\r\n    </Switch>\r\n  );\r\n}\r\nreturn (\r\n  <AuthContext.Provider\r\n    value={{ \r\n      isLoggedIn: !!token,\r\n      token: token,\r\n      userId: userId,\r\n      login: login,\r\n      logout: logout }}\r\n  >\r\n    <Router>\r\n      <MainNavigation />\r\n      <main>{routes}</main>\r\n    </Router>\r\n  </AuthContext.Provider>\r\n);\r\n}\r\n;\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\n\r\nimport './Button.css';\r\n\r\nconst Button = props => {\r\n  if (props.href) {\r\n    return (\r\n      <a\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n        href={props.href}\r\n      >\r\n        {props.children}\r\n      </a>\r\n    );\r\n  }\r\n  if (props.to) {\r\n    return (\r\n      <Link\r\n        to={props.to}\r\n        exact={props.exact}\r\n        className={`button button--${props.size || 'default'} ${props.inverse &&\r\n          'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      >\r\n        {props.children}\r\n      </Link>\r\n    );\r\n  }\r\n  return (\r\n    <button\r\n      className={`button button--${props.size || 'default'} ${props.inverse &&\r\n        'button--inverse'} ${props.danger && 'button--danger'}`}\r\n      type={props.type}\r\n      onClick={props.onClick}\r\n      disabled={props.disabled}\r\n    >\r\n      {props.children}\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default Button;\r\n","import React from 'react';\r\n\r\nimport './Card.css';\r\n\r\nconst Card = props => {\r\n  return (\r\n    <div className={`card ${props.className}`} style={props.style}>\r\n      {props.children}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Card;\r\n","import React, {useState, useContext}  from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport Button from '../../shared/components/FormElements/Button'\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UserItem.css';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\n\r\nimport './UserItem.css';\r\n\r\n\r\n\r\nconst UserItem = props => {\r\n\r\n\r\n\r\n  return (\r\n    <li className=\"user-item\">\r\n      <Card className=\"user-item__content\">\r\n\r\n        <Link to=\"/updateuser\">\r\n          <div className=\"user-item__info\">\r\n            <PersonIcon />\r\n            <h2>{props.name}</h2>\r\n            <h3>{props.email}</h3>\r\n            <h3>{props.id}</h3>\r\n          </div>\r\n       <br/>\r\n\r\n        </Link>\r\n\r\n      </Card>\r\n      <Card>\r\n          <div className=\"user-item__actions\">\r\n            <Button >EDIT</Button>\r\n            <Button danger >\r\n              DELETE\r\n            </Button>\r\n          </div>\r\n          </Card>\r\n    </li>\r\n  );\r\n};\r\n\r\nexport default UserItem;\r\n","import React from 'react';\r\n\r\nimport UserItem from './UserItem';\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport './UsersList.css';\r\n\r\nconst UsersList = props => {\r\n  if (props.items.length === 0) {\r\n    return (\r\n      <div className=\"center\">\r\n        <Card>\r\n          <h2>No users found.</h2>\r\n        </Card>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <ul className=\"users-list\">\r\n      {props.items.map(user => (\r\n        <UserItem\r\n          key={user.userId}\r\n          //user_id\r\n          id={user.userId}\r\n          name={user.name}\r\n          email={user.email}\r\n          // image={user.image}\r\n          \r\n        />\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nexport default UsersList;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport './Backdrop.css';\r\n\r\nconst Backdrop = props => {\r\n  return ReactDOM.createPortal(\r\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\r\n    document.getElementById('backdrop-hook')\r\n  );\r\n};\r\n\r\nexport default Backdrop;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport Backdrop from './Backdrop';\r\nimport './Modal.css';\r\n\r\nconst ModalOverlay = props => {\r\n  const content = (\r\n    <div className={`modal ${props.className}`} style={props.style}>\r\n      <header className={`modal__header ${props.headerClass}`}>\r\n        <h2>{props.header}</h2>\r\n      </header>\r\n      <form\r\n        onSubmit={\r\n          props.onSubmit ? props.onSubmit : event => event.preventDefault()\r\n        }\r\n      >\r\n        <div className={`modal__content ${props.contentClass}`}>\r\n          {props.children}\r\n        </div>\r\n        <footer className={`modal__footer ${props.footerClass}`}>\r\n          {props.footer}\r\n        </footer>\r\n      </form>\r\n    </div>\r\n  );\r\n  return ReactDOM.createPortal(content, document.getElementById('modal-hook'));\r\n};\r\n\r\nconst Modal = props => {\r\n  return (\r\n    <React.Fragment>\r\n      {props.show && <Backdrop onClick={props.onCancel} />}\r\n      <CSSTransition\r\n        in={props.show}\r\n        mountOnEnter\r\n        unmountOnExit\r\n        timeout={200}\r\n        classNames=\"modal\"\r\n      >\r\n        <ModalOverlay {...props} />\r\n      </CSSTransition>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Modal;\r\n","import React from 'react';\r\n\r\nimport Modal from './Modal';\r\nimport Button from '../FormElements/Button';\r\n\r\nconst ErrorModal = props => {\r\n  return (\r\n    <Modal\r\n      onCancel={props.onClear}\r\n      header=\"An Error Occurred!\"\r\n      show={!!props.error}\r\n      footer={<Button onClick={props.onClear}>Okay</Button>}\r\n    >\r\n      <p>{props.error}</p>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default ErrorModal;\r\n","import React from 'react';\r\n\r\nimport './LoadingSpinner.css';\r\n\r\nconst LoadingSpinner = props => {\r\n  return (\r\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\r\n      <div className=\"lds-dual-ring\"></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoadingSpinner;\r\n","\r\nimport React, { useEffect, useState } from 'react';\r\n\r\nimport UsersList from '../components/UsersList';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\n\r\nconst Users = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n  const [loadedUsers, setLoadedUsers] = useState();\r\n\r\n  useEffect(() => {\r\n    const sendRequest = async () => {\r\n      setIsLoading(true);\r\n      try {\r\n        const response = await fetch('http://localhost:5000/auth/users');\r\n\r\n        const responseData = await response.json();\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setLoadedUsers(responseData.users);\r\n      } catch (err) {\r\n        setError(err.message);\r\n        // console.log(err);\r\n      }\r\n      setIsLoading(false);\r\n    };\r\n    sendRequest();\r\n  }, []);\r\n\r\n  const errorHandler = () => {\r\n    setError(null);\r\n  };\r\n\r\n  return (\r\n    <React.Fragment>\r\n      <ErrorModal error={error} onClear={errorHandler} />\r\n      {isLoading && (\r\n        <div className=\"center\">\r\n          <LoadingSpinner />\r\n        </div>\r\n      )}\r\n      {!isLoading && loadedUsers && <UsersList items={loadedUsers} />}\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Users;","import React from 'react';\r\n\r\nconst Centers = () => {\r\n    return <h2> Centers </h2>\r\n};\r\n\r\nexport default Centers;","import React from 'react';\r\n\r\nconst AddCenter = () => {\r\n    return <h2> Add Center</h2>\r\n};\r\n\r\nexport default AddCenter;","import React from 'react';\r\nimport './MainHeader.css';\r\n\r\nconst MainHeader = props => {\r\n    return <header className=\"main-header\">{props.children}</header>\r\n};\r\n\r\nexport default MainHeader;","import { createContext } from 'react';\r\n\r\nexport const AuthContext = createContext({\r\n  isLoggedIn: false,\r\n  userId: null,\r\n  token: null,\r\n  login: () => {},\r\n  logout: () => {}\r\n});\r\n","import React, {useContext} from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport Menu from \"@material-ui/core/Menu\";\r\nimport MenuItem from \"@material-ui/core/MenuItem\";\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nimport {AuthContext} from \"../../context/auth-context\";\r\n\r\nconst useStyles = makeStyles({\r\n    logoutButton: {\r\n        fontSize:\"16px\",\r\n        background: \"transparent\",\r\n        border: \"none\",\r\n        letterSpacing:\"1px\"\r\n    },\r\n});\r\n\r\nconst DropdownLogout = () => {\r\n    const classes = useStyles();\r\n    const [anchorEl, setAnchorEl] = React.useState(null);\r\n    const auth = useContext(AuthContext);\r\n\r\n    const handleClick = (event) => {\r\n        setAnchorEl(event.currentTarget);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setAnchorEl(null);\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Button\r\n                aria-controls=\"simple-menu\"\r\n                aria-haspopup=\"true\"\r\n                onClick={handleClick}\r\n            >\r\n                <PersonIcon/>\r\n            </Button>\r\n            <Menu\r\n                id=\"simple-menu\"\r\n                anchorEl={anchorEl}\r\n                keepMounted\r\n                open={Boolean(anchorEl)}\r\n                onClose={handleClose}\r\n\r\n            >\r\n\r\n                <MenuItem onClick={handleClose} component={Link} to={\"/userprofile\"}>\r\n                    User Profile\r\n                </MenuItem>\r\n                <MenuItem onClick={handleClose} >\r\n                    <button className={classes.logoutButton} onClick={auth.logout}>LOGOUT</button>\r\n                </MenuItem>\r\n\r\n            </Menu>\r\n        </div>\r\n    );\r\n}\r\nexport default DropdownLogout;\r\n","import React, {useContext} from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport './NavLinks.css';\r\nimport PersonIcon from '@mui/icons-material/Person';\r\nimport { AuthContext } from '../../context/auth-context';\r\nimport DropdownMenu from './DropDownMenu';\r\nimport DropdownLogout from './DropdownLogout';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles({\r\n  authButton: {\r\n      fontSize:\"16px\",\r\n      background: \"transparent\",\r\n      border: \"none\",\r\n      letterSpacing:\"1px\"\r\n  },\r\n});\r\n\r\nconst NavLinks = props => {\r\n  const auth = useContext(AuthContext);\r\n  const classes = useStyles();\r\n\r\n    return <ul className=\"nav-links\">\r\n    <li>\r\n      <NavLink to=\"/\" exact>CENTERS</NavLink>\r\n    </li>\r\n    {auth.isLoggedIn &&(\r\n    <li>\r\n      <NavLink to=\"/addcenter\">ADD CENTER</NavLink>\r\n    </li>\r\n    )}\r\n    {auth.isLoggedIn &&(\r\n    <li>\r\n      <NavLink to=\"/users\">USERS</NavLink>\r\n    </li>\r\n    )}\r\n     {!auth.isLoggedIn &&(\r\n    <li>\r\n      <NavLink to=\"/auth\"><PersonIcon className={classes.authButton}/></NavLink>\r\n\r\n    </li>\r\n    )}\r\n    {auth.isLoggedIn && (\r\n        <li>\r\n          <DropdownLogout/>\r\n        </li>\r\n      )}\r\n  </ul>\r\n\r\n};\r\n\r\nexport default NavLinks;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport { CSSTransition } from 'react-transition-group';\r\n\r\nimport './SideDrawer.css';\r\n\r\nconst SideDrawer = props => {\r\n    const content = (\r\n        <CSSTransition\r\n          in={props.show}\r\n          timeout={200}\r\n          classNames=\"slide-in-left\"\r\n          mountOnEnter\r\n          unmountOnExit\r\n        >\r\n          <aside className=\"side-drawer\" onClick={props.onClick}>{props.children}</aside>\r\n        </CSSTransition>\r\n      );\r\n\r\n    return ReactDOM.createPortal(content, document.getElementById('drawer-hook'));\r\n};\r\n\r\nexport default SideDrawer;","import React, { useState } from 'react';\r\nimport MainHeader from './MainHeader';\r\nimport { Link } from 'react-router-dom';\r\nimport './MainNavigation.css';\r\nimport NavLinks from './NavLinks';\r\nimport SideDrawer from './SideDrawer';\r\nimport Backdrop from '../UIElements/Backdrop';\r\n\r\nconst MainNavigation = props => {\r\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\r\n\r\n  const openDrawerHandler = () => {\r\n    setDrawerIsOpen(true);\r\n  };\r\n\r\n  const closeDrawerHandler = () => {\r\n    setDrawerIsOpen(false);\r\n  };\r\n\r\n    return (\r\n    <React.Fragment>\r\n       {drawerIsOpen && <Backdrop onClick={closeDrawerHandler} />}\r\n      \r\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawerHandler}> \r\n        <nav className=\"main-navigation__drawer-nav\">\r\n          <NavLinks />\r\n        </nav>\r\n      </SideDrawer>\r\n\r\n    <MainHeader>\r\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawerHandler}>\r\n        <span />\r\n        <span />\r\n        <span />\r\n      </button>\r\n      <h1 className=\"main-navigation__title\">\r\n        <Link to=\"/\">QUARANTINE CENTERS</Link>\r\n      </h1>\r\n      <nav className=\"main-navigation__header-nav\">\r\n      <NavLinks/>\r\n      </nav>\r\n\r\n    </MainHeader>\r\n    </React.Fragment>\r\n    );\r\n};\r\n\r\nexport default MainNavigation;","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\r\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\r\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\r\nconst VALIDATOR_TYPE_MIN = 'MIN';\r\nconst VALIDATOR_TYPE_MAX = 'MAX';\r\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\r\nconst VALIDATOR_TYPE_FILE = 'FILE';\r\nconst VALIDATOR_TYPE_PHONE_NO = 'PHONE';\r\nconst VALIDATOR_TYPE_PASSWORD = 'PASSWORD';\r\n\r\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\r\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\r\nexport const VALIDATOR_MINLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MINLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MAXLENGTH = val => ({\r\n  type: VALIDATOR_TYPE_MAXLENGTH,\r\n  val: val\r\n});\r\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\r\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\r\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\r\nexport const VALIDATOR_PHONE = () => ({ type: VALIDATOR_TYPE_PHONE_NO });\r\nexport const VALIDATOR_PASSWORD = val => ({ type: VALIDATOR_TYPE_PASSWORD, val: val });\r\n\r\n\r\nexport const validate = (value, validators) => {\r\n  let isValid = true;\r\n  for (const validator of validators) {\r\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\r\n      isValid = isValid && value.trim().length > 0;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\r\n      isValid = isValid && value.trim().length >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\r\n      isValid = isValid && value.trim().length <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MIN) {\r\n      isValid = isValid && +value >= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_MAX) {\r\n      isValid = isValid && +value <= validator.val;\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\r\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_PHONE_NO) {\r\n      isValid = isValid && /^\\d{10}$/.test(value);\r\n    }\r\n    if (validator.type === VALIDATOR_TYPE_PASSWORD) {\r\n      isValid = isValid && value === validator.val;\r\n    }\r\n  }\r\n  return isValid;\r\n};\r\n","import React, { useReducer, useEffect } from 'react';\r\n\r\nimport { validate } from '../../util/validators';\r\nimport './Input.css';\r\n\r\nconst inputReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'CHANGE':\r\n      return {\r\n        ...state,\r\n        value: action.val,\r\n        isValid: validate(action.val, action.validators)\r\n      };\r\n    case 'TOUCH': {\r\n      return {\r\n        ...state,\r\n        isTouched: true\r\n      }\r\n    }\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nconst Input = props => {\r\n  const [inputState, dispatch] = useReducer(inputReducer, {\r\n    value: props.initialValue || '',\r\n    isTouched: false,\r\n    isValid: props.initialValid || false\r\n  });\r\n\r\n  const { id, onInput } = props;\r\n  const { value, isValid } = inputState;\r\n\r\n  useEffect(() => {\r\n    onInput(id, value, isValid)\r\n  }, [id, value, isValid, onInput]);\r\n\r\n  const changeHandler = event => {\r\n    dispatch({\r\n      type: 'CHANGE',\r\n      val: event.target.value,\r\n      validators: props.validators\r\n    });\r\n  };\r\n\r\n  const touchHandler = () => {\r\n    dispatch({\r\n      type: 'TOUCH'\r\n    });\r\n  };\r\n\r\n  const element =\r\n    props.element === 'input' ? (\r\n      <input\r\n        id={props.id}\r\n        type={props.type}\r\n        placeholder={props.placeholder}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    ) : (\r\n      <textarea\r\n        id={props.id}\r\n        rows={props.rows || 3}\r\n        onChange={changeHandler}\r\n        onBlur={touchHandler}\r\n        value={inputState.value}\r\n      />\r\n    );\r\n\r\n  return (\r\n    <div\r\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\r\n        'form-control--invalid'}`}\r\n    >\r\n      <label htmlFor={props.id}>{props.label}</label>\r\n      {element}\r\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Input;\r\n","import { useCallback, useReducer } from 'react';\r\n\r\nconst formReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case 'INPUT_CHANGE':\r\n      let formIsValid = true;\r\n      for (const inputId in state.inputs) {\r\n        if (!state.inputs[inputId]) {\r\n          continue;\r\n        }\r\n        if (inputId === action.inputId) {\r\n          formIsValid = formIsValid && action.isValid;\r\n        } else {\r\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\r\n        }\r\n      }\r\n      return {\r\n        ...state,\r\n        inputs: {\r\n          ...state.inputs,\r\n          [action.inputId]: { value: action.value, isValid: action.isValid }\r\n        },\r\n        isValid: formIsValid\r\n      };\r\n    case 'SET_DATA':\r\n      return {\r\n        inputs: action.inputs,\r\n        isValid: action.formIsValid\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport const useForm = (initialInputs, initialFormValidity) => {\r\n  const [formState, dispatch] = useReducer(formReducer, {\r\n    inputs: initialInputs,\r\n    isValid: initialFormValidity\r\n  });\r\n\r\n  const inputHandler = useCallback((id, value, isValid) => {\r\n    dispatch({\r\n      type: 'INPUT_CHANGE',\r\n      value: value,\r\n      isValid: isValid,\r\n      inputId: id\r\n    });\r\n  }, []);\r\n\r\n  const setFormData = useCallback((inputData, formValidity) => {\r\n    dispatch({\r\n      type: 'SET_DATA',\r\n      inputs: inputData,\r\n      formIsValid: formValidity\r\n    });\r\n  }, []);\r\n\r\n  return [formState, inputHandler, setFormData];\r\n};","import React, { useState, useContext } from 'react';\r\n\r\nimport Card from '../../shared/components/UIElements/Card';\r\nimport Input from '../../shared/components/FormElements/Input';\r\nimport Button from '../../shared/components/FormElements/Button';\r\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\r\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\r\nimport {\r\n  VALIDATOR_EMAIL,\r\n  VALIDATOR_MINLENGTH,\r\n  VALIDATOR_REQUIRE,\r\n  VALIDATOR_PHONE,\r\n  VALIDATOR_PASSWORD\r\n} from '../../shared/util/validators';\r\nimport { useForm } from '../../shared/hooks/form-hook';\r\nimport { AuthContext } from '../../shared/context/auth-context';\r\nimport './Auth.css';\r\nimport { useHttpClient } from '../../shared/hooks/http-hook';\r\nimport { useHistory } from 'react-router';\r\n\r\nconst Auth = () => {\r\n  const auth = useContext(AuthContext);\r\n  const [isLoginMode, setIsLoginMode] = useState(true);\r\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\r\n  const history = useHistory();\r\n\r\n\r\n  const [formState, inputHandler, setFormData] = useForm(\r\n    {\r\n      email: {\r\n        value: '',\r\n        isValid: false\r\n      },\r\n      password: {\r\n        value: '',\r\n        isValid: false\r\n      }\r\n    },\r\n    false\r\n  );\r\n\r\n  const switchModeHandler = () => {\r\n    if (!isLoginMode) {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: undefined,\r\n          address: undefined,\r\n          contact_no: undefined,\r\n          confirm_password:undefined,\r\n        },\r\n        formState.inputs.email.isValid && formState.inputs.password.isValid\r\n      );\r\n    } else {\r\n      setFormData(\r\n        {\r\n          ...formState.inputs,\r\n          name: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          address: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          contact_no: {\r\n            value: '',\r\n            isValid: false\r\n          },\r\n          confirm_password: {\r\n            value: '',\r\n            isValid: false\r\n          }\r\n          //add other fields\r\n        },\r\n        false\r\n      );\r\n    }\r\n    setIsLoginMode(prevMode => !prevMode);\r\n  };\r\n\r\n  const authSubmitHandler = async event => {\r\n    event.preventDefault();\r\n\r\n    if (isLoginMode) {\r\n      try {\r\n        const responseData =await sendRequest(\r\n          'http://localhost:5000/auth/login',\r\n          'POST',\r\n          JSON.stringify({\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n        auth.login(responseData.userId, responseData.token);\r\n      } catch (err) {}\r\n    } else {\r\n      try {\r\n        // const formData = new FormData();\r\n        // formData.append('email', formState.inputs.email.value);\r\n        // formData.append('name', formState.inputs.name.value);\r\n        // formData.append('password', formState.inputs.password.value);\r\n        // formData.append('address', formState.inputs.address.value);\r\n        // formData.append('contact_no', formState.inputs.contact_no.value);\r\n        \r\n        // const responseData = await sendRequest(\r\n        //   'http://localhost:5000/auth/signup',\r\n        //   'POST',\r\n        //   formData,\r\n        //     {\r\n        //     'Content-Type': 'application/json'\r\n        //   }\r\n        // );\r\n        // console.log(responseData.userId);\r\n        // auth.login(responseData.userId, responseData.token);\r\n        const responseData =await sendRequest(\r\n          'http://localhost:5000/auth/signup',\r\n          'POST',\r\n          JSON.stringify({\r\n            name: formState.inputs.name.value,\r\n            email: formState.inputs.email.value,\r\n            password: formState.inputs.password.value,\r\n            address: formState.inputs.address.value,\r\n            contact_no: formState.inputs.contact_no.value\r\n          }),\r\n          {\r\n            'Content-Type': 'application/json'\r\n          }\r\n        );\r\n        // console.log(responseData.userId);\r\n        // auth.login(responseData.userId, responseData.token);\r\n        history.push('/signup');\r\n        \r\n      } catch (err) {\r\n        console.log(err);\r\n      }\r\n    }\r\n  };\r\n\r\n\r\n  return (\r\n    <React.Fragment>\r\n    <ErrorModal error={error} onClear={clearError} />\r\n    <Card className=\"authentication\">\r\n    {isLoading && <LoadingSpinner asOverlay />}\r\n        <h2>{isLoginMode ? 'Login Required' : 'Sign Up'}</h2>\r\n        <hr />\r\n      <form onSubmit={authSubmitHandler}>\r\n        {!isLoginMode && (\r\n          <Input\r\n            element=\"input\"\r\n            id=\"name\"\r\n            type=\"text\"\r\n            label=\"Name\"\r\n            validators={[VALIDATOR_REQUIRE()]}\r\n            errorText=\"Please enter a name.\"\r\n            onInput={inputHandler}\r\n          />\r\n        )}\r\n        <Input\r\n          element=\"input\"\r\n          id=\"email\"\r\n          type=\"email\"\r\n          label=\"E-Mail\"\r\n          validators={[VALIDATOR_EMAIL()]}\r\n          errorText=\"Please enter a valid email address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        <Input\r\n          element=\"input\"\r\n          id=\"password\"\r\n          type=\"password\"\r\n          label=\"Password\"\r\n          validators={[VALIDATOR_MINLENGTH(6)]}\r\n          errorText=\"Please enter a valid password, at least 6 characters.\"\r\n          onInput={inputHandler}\r\n        />\r\n        {!isLoginMode && (\r\n          <Input\r\n          element=\"input\"\r\n          id=\"confirm_password\"\r\n          type=\"password\"\r\n          label=\"Confirm Password\"\r\n          validators={[VALIDATOR_PASSWORD(formState.inputs.password.value)]}\r\n          errorText=\"Please confirm password.\"\r\n          onInput={inputHandler}\r\n        />\r\n        )}\r\n        {!isLoginMode && (\r\n        <Input\r\n          element=\"input\"\r\n          id=\"address\"\r\n          type=\"text\"\r\n          label=\"Address\"\r\n          validators={[VALIDATOR_REQUIRE()]}\r\n          errorText=\"Please enter an address.\"\r\n          onInput={inputHandler}\r\n        />\r\n        )}\r\n        {!isLoginMode && (\r\n        <Input\r\n          element=\"input\"\r\n          id=\"contact_no\"\r\n          type=\"text\"\r\n          label=\"Contact no\"\r\n          validators={[VALIDATOR_PHONE()]}\r\n          errorText=\"Please enter a valid contact no.\"\r\n          onInput={inputHandler}\r\n        />\r\n        )}\r\n        <Button type=\"submit\" disabled={!formState.isValid}>\r\n          {isLoginMode ? 'LOGIN' : 'SIGNUP'}\r\n        </Button>\r\n      </form>\r\n      <Button inverse onClick={switchModeHandler}>\r\n        SWITCH TO {isLoginMode ? 'SIGNUP' : 'LOGIN'}\r\n      </Button>\r\n    </Card>\r\n    </React.Fragment>\r\n  );\r\n};\r\n\r\nexport default Auth;\r\n","import { useState, useCallback, useRef, useEffect } from 'react';\r\n\r\nexport const useHttpClient = () => {\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const [error, setError] = useState();\r\n\r\n  const activeHttpRequests = useRef([]);\r\n\r\n  const sendRequest = useCallback(\r\n    async (url, method = 'GET', body = null, headers = {}) => {\r\n      setIsLoading(true);\r\n      const httpAbortCtrl = new AbortController();\r\n      activeHttpRequests.current.push(httpAbortCtrl);\r\n\r\n      try {\r\n        const response = await fetch(url, {\r\n          method,\r\n          body,\r\n          headers,\r\n          signal: httpAbortCtrl.signal\r\n        });\r\n\r\n        const responseData = await response.json();\r\n\r\n        activeHttpRequests.current = activeHttpRequests.current.filter(\r\n          reqCtrl => reqCtrl !== httpAbortCtrl\r\n        );\r\n\r\n        if (!response.ok) {\r\n          throw new Error(responseData.message);\r\n        }\r\n\r\n        setIsLoading(false);\r\n        return responseData;\r\n      } catch (err) {\r\n        setError(err.message);\r\n        setIsLoading(false);\r\n        throw err;\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n      activeHttpRequests.current.forEach(abortCtrl => abortCtrl.abort());\r\n    };\r\n  }, []);\r\n\r\n  return { isLoading, error, sendRequest, clearError };\r\n};\r\n","import React from 'react';\r\n\r\nconst UpdateUser = () => {\r\n    return <h2> UpdateUser </h2>\r\n};\r\n\r\nexport default UpdateUser;","import React from \"react\";\r\n\r\n\r\nconst UserProfile = () => {\r\n\r\n   \r\n    return (\r\n        <h2>user profile</h2>\r\n        \r\n      );\r\n       \r\n};\r\n\r\nexport default UserProfile;\r\n\r\n ","import React from 'react';\r\n\r\nconst UpdateCenter = () => {\r\n    return <h2> UpdateCenter page </h2>\r\n};\r\n\r\nexport default UpdateCenter;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\nimport './index.css';\r\n\r\nReactDOM.render(\r\n\r\n    <App />,\r\n\r\n  document.getElementById('root')\r\n);\r\n\r\n"],"sourceRoot":""}